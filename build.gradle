/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "com.teamscale" version "24.0.1"
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'com.drewnoakes:metadata-extractor:2.16.0'
    implementation 'org.swinglabs.swingx:swingx-all:1.6.5-1'
    implementation 'net.jafama:jafama:2.3.2'
    implementation 'com.twelvemonkeys.imageio:imageio-jpeg:3.7.0'
    implementation 'com.twelvemonkeys.imageio:imageio-tga:3.7.0'
    implementation 'com.twelvemonkeys.imageio:imageio-pnm:3.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.assertj:assertj-swing-junit:3.17.1'
    testImplementation 'org.easytesting:fest-util:1.1.2'
}

group = 'pixelitor'
version = '4.3.0'
description = 'pixelitor'

// Please make use of this toolchain feature also in
// your Gradle projects to specify the Java version 
// to use. Setting paths to particular JDK installations
// has shown to be error prone and is not supported by
// some Gradle plugins well.
java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// The classical test task that does not use Teamscales' test runner
test {
    useJUnitPlatform()
}

// The Teamscale server to which coverage is supposed
// to be uploaded to. 
teamscale {

    // Credentials used to access the server. Please update
    // this information so that the data can be uploaded
    // to your Teamscale project.
    server {
	url = 'http://localhost:8080/'
        userName = 'admin'
        userAccessToken = 'LK3WfCbeVYNP8U0mpUlQ5XFqSCblh4Fa'
        project = 'pixelitor'
    }

    // The test coverage is reported into the partition 'Unit Tests'
    // with external analysis results.
    report {
        testwiseCoverage { it.partition = 'Unit Tests Two' }
    }

}

tasks.register('tiaTests', com.teamscale.TestImpacted) {
    // The JUnit5 platform is needed for the TestImpacted runner
    useJUnitPlatform()

    // Configure the JaCoCo coverage collector to only 
    // include coverage for relevant classes.
    jacoco {
        includes = ["com.jhlabs.*", "com.bric.*", "pixelitor.*"]
    }
}

jar {
  manifest {
    attributes(
      'Main-Class': 'pixelitor.Pixelitor'
    )
  }
}
